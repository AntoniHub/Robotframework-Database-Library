name: Oracle thick client mode tests

on: [push, pull_request]

env:
  DB_MODULE: oracledb
  DB_NAME: db
  DB_USER: db_user
  DB_PASS: pass
  DB_HOST: 127.0.0.1
  DB_PORT: 1521
  LIB_DIR: /opt/oracle/instantclient_21_4

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      oracle:
        image: gvenzl/oracle-free:latest
        env:
          ORACLE_PASSWORD: ${{ env.DB_PASS }}
          ORACLE_DATABASE: ${{ env.DB_NAME }}
          APP_USER: ${{ env.DB_USER }}
          APP_USER_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - 1521:1521
          # Provide healthcheck script options for startup
        options: --health-cmd healthcheck.sh --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Install Oracle instant client
        run: |
          cd /opt/
          sudo mkdir /opt/oracle
          sudo wget https://download.oracle.com/otn_software/linux/instantclient/214000/instantclient-basic-linux.x64-21.4.0.0.0dbru.zip
          sudo unzip instantclient-basic-linux.x64-21.4.0.0.0dbru.zip
          cp instantclient_21_4 /usr/local/lib/

      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.14'

      - name: Setup Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Development/Checked out version of DatabaseLibrary
        run: |
          pip install -e ${{ github.workspace }}

      - name: Setup Python DB module
        run: |
          pip install ${{ env.DB_MODULE }}
     
      - name: Launch RF Tests
        working-directory: ./test
        run: >-
            robot
            -d results
            --xunit result.xml
            --loglevel DEBUG:INFO
            -v DB_MODULE:${{ env.DB_MODULE }}
            -v DB_NAME:${{ env.DB_NAME }}
            -v DB_USER:${{ env.DB_USER }}
            -v DB_PASS:${{ env.DB_PASS }}
            -v DB_HOST:${{ env.DB_HOST }}
            -v DB_PORT:${{ env.DB_PORT }}
            -v ORACLE_LIB_DIR:"${{ env.LIB_DIR }}"
            tests/custom_db_tests/oracle_thick_mode.robot            
      
      - name: Upload Robot Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: log-files
          path: ./test/results/
